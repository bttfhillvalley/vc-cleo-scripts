{$CLEO .s}
0000:
thread 'whealth'

// In some .cs script, just launch a bunch of scripts for each pickup
// i.e. stream_custom_script 'Pickup.s' PEPSI_MODEL_1985 1000.0 1000.0 10.0 19700101 20100101
{$INCLUDE ../Common/CleoConstants.txt}
int start_date
int end_date
int current_date
int walkman_pickup  //stylized model
int walkman_check //the check to spawn it once.
int walkman_model_1 = 116 //on shoulders
int walkman_model_2 = 117 //on head
float x
float y
float z

:PickupStart
wait 0
0AB4: current_date = var CDATE
// Wait until we are in the correct date range before creating pickup
if and
    current_date >= start_date
    current_date < end_date
else_jump @PickupStart
        Model.Load(#pickupmusic)  //stylized pickup
        038B: load_requested_models
        while not  Model.Available(#pickupmusic) //stylized pickup
            wait 0
        end 
        wait 1000          
        Pickup.Create(walkman_pickup, #pickupmusic, 2, -446.5377, 282.1073, 26.1806) //stylized pickup
            
stream_custom_script "Pickups/Walkman.s"
wait 0 
        Model.Destroy(#pickupmusic) //stylized pickup
        walkman_check = 1
        wait 1000 
                  

:walkmanoff
wait 0
Model.Load(#NULL) //have to load something so best to load nothing 
if and
    0256:   player $PLAYER_CHAR defined
    0214:   pickup walkman_pickup picked_up
    Model.Available(#NULL)
jf @walkmanoff
wait 500
//give walkman on neck
01B4: set_player $PLAYER_CHAR can_move 0
0352: set_actor $PLAYER_ACTOR skin_to 'WALKMAN' // set your character, see list of special characters at 023C
038B: load_requested_models
0353: refresh_actor $PLAYER_ACTOR
01B4: set_player $PLAYER_CHAR can_move 1
01B2: give_actor $PLAYER_ACTOR weapon walkman_model_2 ammo 1 //on head //give this first so it defaults to the shoulders
01B2: give_actor $PLAYER_ACTOR weapon walkman_model_1 ammo 1 //on shoulders
Model.Destroy(walkman_model_1) //on shoulders
Model.Destroy(walkman_model_2) //on head  
jump @walkmanoff



:PickupCheck
wait 0
0AB4: current_date = var CDATE
// Destroy pickup when we're outside the date range 
if or
    current_date < start_date
    current_date >= end_date
else_jump @PickupCheck
Pickup.Destroy(walkman_pickup) 
jump @PickupStart