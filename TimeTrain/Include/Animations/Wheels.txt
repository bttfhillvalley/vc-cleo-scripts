{$INCLUDE Variables.txt}
:Wheels
// 1 - LF
// 2 - LR
// 3 - RF
// 4 - RR
0AB4: y = var TRAVEL
if
    y == 1
then
    return
end

3F1C: get_car vehicle component "wheels_r_" rotation z x y
0097: abs x
if
    x < 1.0
then
    3F0E: store_car vehicle wheel_rotation wheel_lf wheel_lb wheel_rf wheel_rb
    3F0F: store_car vehicle wheel_speed x wheel_delta y z
else
    3F0E: store_car vehicle wheel_rotation wheel_lf z wheel_rf z
    3F3C: get_car vehicle relative_velocity z y z
    3F02: z = car vehicle engine_state
    if
        z == 0
    then
        y = 0.0
    else
        y /= -1.08
        if and
            x > 89.0
            y > -0.175
        then
            y = -0.175
        end
    end

    if
        wheel_delta > y
    then
        wheel_delta -= 0.004
    else if
        wheel_delta < y
    then
        wheel_delta += 0.004
    end
    end
    z = wheel_delta
    z *= 180.0
    z /= 3.14159625
    wheel_lb += z


    3F0F: store_car vehicle wheel_speed x y x z
    3F1F: set_car vehicle wheel_speed x wheel_delta x wheel_delta
end
wheel_rb = wheel_lb
wheel_rb += 90.0
3F1E: set_car vehicle wheel_rotation wheel_lf wheel_lb wheel_rf wheel_rb

// Wheel Sounds
3F1C: get_car vehicle component "wheelmove_lm" rotation x y z

02E3: vehicle_speed = car vehicle speed
vehicle_speed /= 200.0
vehicle_speed += 0.75

if and
    left_wheel == 0
    x > 2.5
then
    left_wheel = 1
    3F96: x = attach_sound "jvt/chug1.wav" to_car vehicle offset 0 0 0 loop 0 size 30.0
    3F97: set_sound "jvt/chug1.wav"  index x frequency vehicle_speed
    3F98: set_sound "jvt/chug1.wav"  index x volume 1.5
    3F9E: set_reverb "jvt/chug1.wav" index x time 500.0 ratio 0.5
    stream_custom_script "TimeTrain/SmokeStack.s" vehicle -0.27
else if and
    left_wheel == 1
    x < -2.5
then
    left_wheel = 0
    3F96: x = attach_sound "jvt/chug3.wav" to_car vehicle offset 0 0 0 loop 0 size 30.0
    3F97: set_sound "jvt/chug3.wav"  index x frequency vehicle_speed
    3F98: set_sound "jvt/chug3.wav"  index x volume 1.5
    3F9E: set_reverb "jvt/chug3.wav" index x time 500.0 ratio 0.5
    stream_custom_script "TimeTrain/SmokeStack.s" vehicle -0.27
end
end
3F1C: get_car vehicle component "wheelmove_rm" rotation x y z

if and
    right_wheel == 0
    x > 2.5
then
    right_wheel = 1
    3F96: x = attach_sound "jvt/chug2.wav" to_car vehicle offset 0 0 0 loop 0 size 30.0
    3F97: set_sound "jvt/chug2.wav" index x frequency vehicle_speed
    3F98: set_sound "jvt/chug2.wav"  index x volume 1.5
    3F9E: set_reverb "jvt/chug2.wav" index x time 500.0 ratio 0.5
    stream_custom_script "TimeTrain/SmokeStack.s" vehicle 0.27
else if and
    right_wheel == 1
    x < -2.5
then
    right_wheel = 0
    3F96: x = attach_sound "jvt/chug4.wav" to_car vehicle offset 0 0 0 loop 0 size 30.0
    3F97: set_sound "jvt/chug4.wav" index x frequency vehicle_speed
    3F98: set_sound "jvt/chug4.wav"  index x volume 1.5
    3F9E: set_reverb "jvt/chug4.wav" index x time 500.0 ratio 0.5
    stream_custom_script "TimeTrain/SmokeStack.s" vehicle 0.27
end
end


// Boggie/Tender wheels
3F16: set_car vehicle component "bogie1locow1" angle wheel_lf 0.0 0.0
3F16: set_car vehicle component "bogie1locow2" angle wheel_lf 0.0 0.0
3F16: set_car vehicle component "bogie1tenderw1" angle wheel_lf 0.0 0.0
3F16: set_car vehicle component "bogie1tenderw2" angle wheel_lf 0.0 0.0
3F16: set_car vehicle component "bogie2tenderw1" angle wheel_lf 0.0 0.0
3F16: set_car vehicle component "bogie2tenderw2" angle wheel_lf 0.0 0.0

// Driving Wheels
3F16: set_car vehicle component "wheelmove_lf" angle wheel_lb 0.0 0.0
3F16: set_car vehicle component "wheelmove_lm" angle wheel_lb 0.0 0.0
3F16: set_car vehicle component "wheelmove_lr" angle wheel_lb 0.0 0.0
3F16: set_car vehicle component "wheelmove_rf" angle wheel_rb 0.0 0.0
3F16: set_car vehicle component "wheelmove_rm" angle wheel_rb 0.0 0.0
3F16: set_car vehicle component "wheelmove_rr" angle wheel_rb 0.0 0.0
return

:Rods
3F0E: store_car vehicle wheel_rotation 1@ 2@ 3@ 4@
// Rods
2@ *= -1.0
4@ *= -1.0
3F16: set_car vehicle component "wheelrod_l" angle 2@ 0.0 0.0
3F16: set_car vehicle component "wheelrod_r" angle 4@ 0.0 0.0

3F1C: get_car vehicle component "wheelmove_lm" rotation 1@ 3@ 5@
3F1C: get_car vehicle component "wheelmove_rm" rotation 2@ 4@ 6@

cleo_call @PistonRod 2 vehicle 1@ ret 3@ 4@
cleo_call @PistonRod 2 vehicle 2@ ret 5@ 6@
4@ *= -1.0
3F16: set_car vehicle component "pistonrod_l" angle 3@ 0.0 4@
3F16: set_car vehicle component "pistonrod_r" angle 5@ 0.0 6@
cleo_return 0


:PistonRodRotate
02F6: x = sinus frame
x *= 4.795
cleo_return 2 x z

:PistonRod
// Adjuster for the holders moving out
3F1B: get_car vehicle component "holder_r" position rotate_speed y z
rotate_speed /= -0.075

// Adjust based on hovering wheels
3F1C: get_car vehicle component "wheels_r_" rotation x y z
0097: abs y
x = y
x *= 0.12
x += rotate_speed
z = y
if
    y < 60.0
then
    z *= 0.075
else
    z /= 6.0
    z -= 5.5
end

// Get rod position based on wheels
cleo_call @PistonRodRotate 2 vehicle frame ret 14@ 15@
005B: x += 14@
005B: z += 15@
cleo_return 2 x z