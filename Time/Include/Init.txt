{$INCLUDE variables.txt}
{$INCLUDE ../../common/CleoConstants.txt}

:Init
// Set health to 1000 if at 0
if
    vehicle_health == 0
then
    vehicle_health = 1000
end

// Select how to spawn
if
    Car.Wrecked(vehicle)
then
    0085: vehicle_model = vehicle
    if
        z == 0
    then
        gosub @ReentrySpawn
    else
        gosub @ReentryLoadModel
    end
else
    vehicle_model = Car.Model(vehicle)
    cleo_call @Setup 6 vehicle vehicle_flags dest_date dest_time past_date past_time
end
stream_custom_script "Time/CarReference.s" vehicle
return

:ReentrySpawn
if
    not z == 0
then
    return
end
    // Set dest time to correct time
    0AB4: dest_date = var CDATE
    0AB4: dest_time = var CTIME

    // In case flags include the fueled bit
    0B10: vehicle_flags = vehicle_flags AND FUEL_BITMASK

    // Find nearest road to have the time machine reenter
    04C4: create_coordinate x y z from_actor $PLAYER_ACTOR offset 0.0 0.0 1.0
    // Flying
    0B10: result = vehicle_flags AND FLYING_BIT   // Is car flying?
    if
        result == 0
    then
        result = 2
        04D3: get_nearest_car_path_coords_from x y z type result store_to x y z
        while 038A:   car_in_cube x y z 4.0 4.0 3.0
            result += 1
            04D3: get_nearest_car_path_coords_from x y z type result store_to x y z
        end
    end
    03D3: point x y z get_nearby_vector x y z rz

    // Flying
    0B10: result = vehicle_flags AND FLYING_BIT   // Is car flying?
    if
        not result == 0
    then
        z += 20.0
    end

    // Reentry Explosion
    cleo_call @LoadModel 1 vehicle_model ret vehicle
    cleo_call @Setup 6 vehicle vehicle_flags dest_date dest_time past_date past_time
    0B11: vehicle_flags = vehicle_flags OR COOLDOWN_BIT
    0175: set_car vehicle z_angle_to rz
    3F31: get_car vehicle rotation_matrix rx ry rz
    3F3B: velocity = get_car vehicle forward_vector_with_speed 48.1
    gosub @ReentryStart
return