{$INCLUDE variables.txt}
{$INCLUDE ../../common/CleoConstants.txt}

:Init
// Set health to 1000 if at 0
if
    vehicle_health == 0
then
    vehicle_health = 1000
end

// Select how to spawn
if
    Car.Wrecked(vehicle)
then
    0085: vehicle_model = vehicle
    if
        z == 0
    then
        gosub @ReentrySpawn
    else
        gosub @ReentryLoadModel
    end
else
    vehicle_model = Car.Model(vehicle)
    cleo_call @Setup 6 vehicle vehicle_flags dest_date dest_time past_date past_time
end
return

:ReentrySpawn
if
    not z == 0
then
    return
end
    // Set dest time to correct time
    0AB4: dest_date = var CDATE
    0AB4: dest_time = var CTIME

    // In case flags include the fueled bit
    0B10: vehicle_flags = vehicle_flags AND FUEL_BITMASK

    // Spawn car via reentry
    //01B4: set_player $PLAYER_CHAR can_move 0

    // Find nearest road to have the time machine reenter
    // Also hacky camera thing to make sure the model streams in otherwise crashes can happen
    04C4: create_coordinate x y z from_actor $PLAYER_ACTOR offset 0.0 -1.0 1.0
    //Camera.SetPosition(x, y, z, 0, 0, 0)
    03D3: point x y z get_nearby_vector x y z rz
    //Camera.PointAt(x, y, z, 1)

    // Reentry Explosion
    cleo_call @LoadModel 1 vehicle_model ret vehicle
    cleo_call @Setup 6 vehicle vehicle_flags dest_date dest_time past_date past_time
    cleo_call @ReentrySonicBoom 6 vehicle_flags x y z past_date past_time
    0B11: vehicle_flags = vehicle_flags OR COOLDOWN_BIT
    //Camera.Restore()
    Car.PutAt(vehicle, x, y, z)
    0175: set_car vehicle z_angle_to rz
    wait 0
    3F31: get_car vehicle rotation_matrix rx ry rz
    3F3B: velocity = get_car vehicle forward_vector_with_speed 48.1
    3F35: set_car vehicle velocity_vector velocity
    0208: result = random_float -0.01 0.01
    3F30: set_car vehicle rotate_force result
    02D4: car vehicle turn_off_engine
    0AB3: var TIME_MACHINE = vehicle
    //01B4: set_player $PLAYER_CHAR can_move 1
    gosub @ReentryEnd
return