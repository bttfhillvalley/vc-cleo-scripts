{$CLEO .s}
{$INCLUDE ../Common/CleoConstants.txt}
0000:
int vehicle
float x
float y
float z
float vehicle_speed
float bonnet_angle = 0.0
float boot_angle  = 0.0
float open_speed
float engine_cover
int var1
int var2

while true
    wait 0
    if
        Car.Wrecked(vehicle)
    then
        terminate_this_custom_script
    end

    // If the bonnet is open and the car is moving, close the bonnet
    02E3: vehicle_speed = car vehicle speed
    if and
        boot_angle > 0.0
        vehicle_speed > 30.0
    then
        gosub @CloseBonnet
        continue
    end

    if and
        boot_angle > 0.0
        vehicle_speed > 30.0
    then
        gosub @CloseBoot
        continue
    end

    // Check to see if player is driving or not
    if
        00E0:   player $PLAYER_CHAR in_any_car
    then
        continue
    end

    gosub @HandleBonnet
    gosub @HandleBoot
end

:HandleBonnet
0407: create_coordinate x y z from_car vehicle offset 0.0 3.25 0.0
if or
    80E1:   not key_pressed 0 4
    80F6:   not player $PLAYER_CHAR 0 x y z  radius 0.75 0.75 2.0
then
    return
end

if
    bonnet_angle <= 0.0
then
    gosub @OpenBonnet
else
    gosub @CloseBonnet
end
return

:OpenBonnet
open_speed = 0.1
while bonnet_angle < 1.0
    wait 0
    open_speed *= 0.915
    bonnet_angle += open_speed
    3F45: set_car vehicle bonnet bonnet_angle
end
bonnet_angle = 1.0 // Needed because of floating point inprecision
3F45: set_car vehicle bonnet bonnet_angle
return

:CloseBonnet
while bonnet_angle > 0.0
    wait 0
    bonnet_angle -= 0.1
    3F45: set_car vehicle bonnet bonnet_angle
end
bonnet_angle = 0.0  // Needed because of floating point inprecision
3F45: set_car vehicle bonnet bonnet_angle
return

:HandleBoot
0407: create_coordinate x y z from_car vehicle offset 0.0 -3.25 0.0
if or
    3F40:   is_car vehicle component "bttf1" visible
    3F40:   is_car vehicle component "bttf2" visible
    80E1:   not key_pressed 0 4
    80F6:   not player $PLAYER_CHAR 0 x y z  radius 0.75 0.75 2.0
then
    return
end
if
    boot_angle <= 0.0
then
    gosub @OpenBoot
else
    gosub @CloseBoot
end
return

:OpenBoot
open_speed = 0.1
while boot_angle < 1.0
    wait 0
    open_speed *= 0.915
    boot_angle += open_speed
    3F46: set_car vehicle boot boot_angle
    3F16: set_car vehicle component "enginecover" angle engine_cover 0.0 0.0
end
open_speed = 6.0
while engine_cover > -54.0
    wait 0
    open_speed *= 0.915
    engine_cover -= open_speed
    3F16: set_car vehicle component "enginecover" angle engine_cover 0.0 0.0
end
boot_angle = 1.0 // Needed because of floating point inprecision
3F46: set_car vehicle boot boot_angle
return

:CloseBoot
while engine_cover < 0.0
    wait 0
    engine_cover += 6.0
    3F16: set_car vehicle component "enginecover" angle engine_cover 0.0 0.0
end
engine_cover = 0.0
3F16: set_car vehicle component "enginecover" angle engine_cover 0.0 0.0
while boot_angle > 0.0
    wait 0
    boot_angle -= 0.1
    3F46: set_car vehicle boot boot_angle
end
boot_angle = 0.0  // Needed because of floating point inprecision

3F46: set_car vehicle boot boot_angle
return